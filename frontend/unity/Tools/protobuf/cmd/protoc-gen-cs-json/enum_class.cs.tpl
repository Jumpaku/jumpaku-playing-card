{{- /* Go Template */ -}}
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: {{.SourceFullName}}({{.SourceFile}})
// </auto-generated>

{{ $GlobalNamespace := printf "%s%s" "global::" .Namespace.Join -}}
{{- $ClassName := .ClassName }}

namespace {{.Namespace.Join}} {

    public enum {{.ClassName}} {
    {{range .Values}}
        {{.ValueName}} = {{.ValueNumber}},
    {{end}}
    }
    public class {{$ClassName}}_String {
        public static string FromEnum({{$GlobalNamespace}}.{{$ClassName}} enumValue) {
            switch (enumValue) {
            {{range .Values}}
                case {{$GlobalNamespace}}.{{$ClassName}}.{{.ValueName}}:
                    return {{.ValueString}};
            {{end}}
                default:
                    throw new global::System.ArgumentOutOfRangeException(nameof(enumValue), enumValue, null);
            }
        }
        public static string FromLong(long longValue) {
            switch (longValue) {
            {{range .Values}}
                case {{.ValueNumber}}:
                    return {{.ValueString}};
            {{end}}
                default:
                    throw new global::System.ArgumentOutOfRangeException(nameof(longValue), longValue, null);
            }
        }
        public static {{$GlobalNamespace}}.{{$ClassName}} ToEnum(string stringValue) {
            switch (stringValue) {
            {{range .Values}}
                case {{.ValueString}}:
                    return {{$GlobalNamespace}}.{{$ClassName}}.{{.ValueName}};
            {{end}}
                default:
                    throw new global::System.ArgumentOutOfRangeException(nameof(stringValue), stringValue, null);
            }
        }
        public static long ToLong(string stringValue) {
            switch (stringValue) {
            {{range .Values}}
                case {{.ValueString}}:
                    return {{.ValueNumber}};
            {{end}}
                default:
                    throw new global::System.ArgumentOutOfRangeException(nameof(stringValue), stringValue, null);
            }
        }
    {{range .Values}}
        public const string {{.ValueName}} = {{.ValueString}};
    {{end}}
    }

    public class {{$ClassName}}_Long {
        public static long FromEnum({{$GlobalNamespace}}.{{$ClassName}} enumValue) {
            switch (enumValue) {
            {{range .Values}}
                case {{$GlobalNamespace}}.{{$ClassName}}.{{.ValueName}}:
                    return {{.ValueNumber}};
            {{end}}
                default:
                    throw new global::System.ArgumentOutOfRangeException(nameof(enumValue), enumValue, null);
            }
        }
        public static long FromString(string stringValue) {
            switch (stringValue) {
            {{range .Values}}
                case {{.ValueString}}:
                    return {{.ValueNumber}};
            {{end}}
                default:
                    throw new global::System.ArgumentOutOfRangeException(nameof(stringValue), stringValue, null);
            }
        }
        public static {{$GlobalNamespace}}.{{$ClassName}} ToEnum(long longValue) {
            switch (longValue) {
            {{range .Values}}
                case {{.ValueNumber}}:
                    return {{$GlobalNamespace}}.{{$ClassName}}.{{.ValueName}};
            {{end}}
                default:
                    throw new global::System.ArgumentOutOfRangeException(nameof(longValue), longValue, null);
            }
        }
        public static string ToString(long longValue) {
            switch (longValue) {
            {{range .Values}}
                case {{.ValueNumber}}:
                    return {{.ValueString}};
            {{end}}
                default:
                    throw new global::System.ArgumentOutOfRangeException(nameof(longValue), longValue, null);
            }
        }
    {{range .Values}}
        public const long {{.ValueName}} = {{.ValueNumber}};
    {{end}}
    }
}