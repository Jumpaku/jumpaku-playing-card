// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api.v1.app.user.UserService.RemoveUserAuthentication(api/v1/app/user/service.proto)
// </auto-generated>

using UnityEngine;

namespace Api_PB.V1_PB.App_PB.User_PB.UserService_PB {

    public partial class UserService
    {

        public class RemoveUserAuthentication_Result {
            public global::UnityEngine.Networking.UnityWebRequest.Result result;
            public global::Api_PB.V1_PB.App_PB.User_PB.RegisterUserAuthenticationResponse responseBody;
            public global::Api_PB.V1_PB.ErrorResponse errorResponseBody;
        }

        public static async global::Cysharp.Threading.Tasks.UniTask<RemoveUserAuthentication_Result> RemoveUserAuthentication(
            global::App.Script.Shared.Api.ISession session,
            global::Api_PB.V1_PB.App_PB.User_PB.RegisterUserAuthenticationRequest input,
            global::System.Collections.Generic.Dictionary<string, string> requestHeaders = null
        )
        {
            string urlPath = $"/api/v1/app/user/{input?.userId}/authentication";
            string urlQuery = "";
            var requestUrl = $"{session.GetBaseUrl()}{urlPath}{urlQuery}";

            var inputJson = global::UnityEngine.JsonUtility.ToJson(input);
            var uwr = new global::UnityEngine.Networking.UnityWebRequest(
                requestUrl,
                "PUT",
                new global::UnityEngine.Networking.DownloadHandlerBuffer(),
                new global::UnityEngine.Networking.UploadHandlerRaw(global::System.Text.Encoding.UTF8.GetBytes(inputJson))
            );
            uwr.SetRequestHeader("Content-Type", "application/json");
            requestHeaders = requestHeaders ?? new ();
            requestHeaders = session.AddAuthorization(requestHeaders ?? new ());
            foreach (var header in requestHeaders)
            {
                uwr.SetRequestHeader(header.Key, header.Value);
            }

            session.OnSend(uwr.method, uwr.url, requestHeaders, global::System.Text.Encoding.UTF8.GetString(uwr.uploadHandler.data));
            await uwr.SendWebRequest();
            var outputJson = uwr.downloadHandler.text;
            session.OnReceive(uwr.responseCode, uwr.GetResponseHeaders(), outputJson);

            switch (uwr.result)
            {
                case global::UnityEngine.Networking.UnityWebRequest.Result.Success:
                    return new RemoveUserAuthentication_Result
                    {
                        result = uwr.result,
                        responseBody = global::UnityEngine.JsonUtility.FromJson<global::Api_PB.V1_PB.App_PB.User_PB.RegisterUserAuthenticationResponse>(outputJson),
                    };
                case global::UnityEngine.Networking.UnityWebRequest.Result.ProtocolError:
                    return new RemoveUserAuthentication_Result
                    {
                        result = uwr.result,
                        errorResponseBody = global::UnityEngine.JsonUtility.FromJson<global::Api_PB.V1_PB.ErrorResponse>(outputJson),
                    };
                default:
                    return new RemoveUserAuthentication_Result
                    {
                        result = uwr.result,
                    };
            }
        }
    }

}