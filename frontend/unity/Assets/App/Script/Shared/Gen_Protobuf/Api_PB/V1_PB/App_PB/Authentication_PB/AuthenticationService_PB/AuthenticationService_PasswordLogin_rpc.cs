// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api.v1.app.authentication.AuthenticationService.PasswordLogin(api/v1/app/authentication/service.proto)
// </auto-generated>

using UnityEngine;

namespace Api_PB.V1_PB.App_PB.Authentication_PB.AuthenticationService_PB {

    public partial class AuthenticationService
    {

        public class PasswordLogin_Result : global::App.Script.Shared.Api.IResultError {
            public global::UnityEngine.Networking.UnityWebRequest.Result result;
            public global::Api_PB.V1_PB.App_PB.Authentication_PB.PasswordLoginResponse responseBody;
            public global::Api_PB.V1_PB.ErrorResponse errorResponseBody;
            public string errorMessage;
            public global::UnityEngine.Networking.UnityWebRequest.Result ErrorKind { get => result; }
            public bool IsError { get => result != global::UnityEngine.Networking.UnityWebRequest.Result.Success; }
            public string ErrorTitle { get => result.ToString(); }
            public string ErrorMessage { get => errorMessage; }
            public global::Api_PB.V1_PB.ErrorResponse ErrorDetail { get => errorResponseBody; }
        }

        public static async global::Cysharp.Threading.Tasks.UniTask<PasswordLogin_Result> PasswordLogin(
            global::App.Script.Shared.Api.ISession session,
            global::Api_PB.V1_PB.App_PB.Authentication_PB.PasswordLoginRequest input,
            global::System.Collections.Generic.Dictionary<string, string> requestHeaders = null
        )
        {
            string urlPath = $"/api/v1/app/authentication/password/login";
            string urlQuery = "";
            var requestUrl = $"{session.GetBaseUrl()}{urlPath}{urlQuery}";

            var inputJson = global::UnityEngine.JsonUtility.ToJson(input);
            global::UnityEngine.Networking.UnityWebRequest uwr;

            try
            {
                uwr = new global::UnityEngine.Networking.UnityWebRequest(
                    requestUrl,
                    "POST",
                    new global::UnityEngine.Networking.DownloadHandlerBuffer(),
                    new global::UnityEngine.Networking.UploadHandlerRaw(global::System.Text.Encoding.UTF8.GetBytes(inputJson))
                );
                uwr.SetRequestHeader("Content-Type", "application/json");
                requestHeaders = requestHeaders ?? new ();
                requestHeaders = session.AddAuthorization(requestHeaders ?? new ());
                foreach (var header in requestHeaders)
                {
                    uwr.SetRequestHeader(header.Key, header.Value);
                }

                session.OnSend(uwr.method, uwr.url, requestHeaders, global::System.Text.Encoding.UTF8.GetString(uwr.uploadHandler.data));
                await uwr.SendWebRequest();
            }
            catch (System.Exception e)
            {
                return new PasswordLogin_Result
                {
                    result = global::UnityEngine.Networking.UnityWebRequest.Result.ConnectionError,
                    errorMessage = e.Message,
                };
            }
            var outputJson = uwr.downloadHandler.text;
            session.OnReceive(uwr.responseCode, uwr.GetResponseHeaders(), outputJson);

            switch (uwr.result)
            {
                case global::UnityEngine.Networking.UnityWebRequest.Result.Success:
                {
                    try
                    {
                        return new PasswordLogin_Result {
                            result = uwr.result,
                            responseBody = global::UnityEngine.JsonUtility.FromJson<global::Api_PB.V1_PB.App_PB.Authentication_PB.PasswordLoginResponse>(outputJson)
                        };
                    }
                    catch (System.Exception e)
                    {
                        return new PasswordLogin_Result
                        {
                            result = global::UnityEngine.Networking.UnityWebRequest.Result.DataProcessingError,
                            errorMessage = e.Message,
                        };
                    }
                }
                case global::UnityEngine.Networking.UnityWebRequest.Result.ProtocolError:
                {
                    try
                    {
                        return new PasswordLogin_Result {
                            result = uwr.result,
                            errorResponseBody = global::UnityEngine.JsonUtility.FromJson<global::Api_PB.V1_PB.ErrorResponse>(outputJson),
                            errorMessage = uwr.error,
                        };
                    }
                    catch (System.Exception e)
                    {
                        return new PasswordLogin_Result
                        {
                            result = global::UnityEngine.Networking.UnityWebRequest.Result.DataProcessingError,
                            errorMessage = e.Message,
                        };
                    }
                }
                default:
                    return new PasswordLogin_Result { result = uwr.result, errorMessage = uwr.error };
            }
        }
    }

}